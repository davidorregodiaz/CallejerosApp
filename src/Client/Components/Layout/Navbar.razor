@using Client.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject IJSRuntime Js
@inject AuthService _authService
@inject NavigationManager _nav

<nav class="navbar bg-white ">
  <div class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
    <div class="relative flex h-16 items-center justify-between">
      <div class="absolute inset-y-0 left-0 flex items-center sm:hidden ">
        <!-- Mobile menu button-->
        <button type="button" class="relative inline-flex items-center justify-center rounded-md p-2 text-blackhover:bg-indigo-500 hover:text-white focus:ring-2 focus:ring-white focus:outline-hidden focus:ring-inset" aria-controls="mobile-menu" aria-expanded="false">
          <span class="absolute -inset-0.5"></span>
          <span class="sr-only">Open main menu</span>
          <!--
            Icon when menu is closed.

            Menu open: "hidden", Menu closed: "block"
          -->
          <svg class="block size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" data-slot="icon">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
          </svg>
          <!--
            Icon when menu is open.

            Menu open: "block", Menu closed: "hidden"
          -->
          <svg class="hidden size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" data-slot="icon">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="flex flex-1 items-center justify-center sm:items-stretch sm:justify-between">
        <div class="flex shrink-0 items-center">
          <img 
            class="object-cover h-8 w-auto" 
            src="images/undraw_cat.png" alt="Web logo" />
        </div>
        <div class="hidden sm:ml-6 sm:block sm:justify-center sm:pt-1.5">
          <div class="flex space-x-4">
            <!-- Current: "bg-gray-900 text-white", Default: "text-black hover:bg-indigo-500 hover:text-white" -->
            <NavLink href="/" class=" rounded-full px-3 py-2 font-display text-sm font-medium text-black hover:bg-indigo-700 hover:text-white transition-colors ease-in-out duration-75" aria-current="page">Home</NavLink>
            <NavLink href="/adoptions" class="rounded-full font-display px-3 py-2 text-sm font-medium text-black hover:bg-indigo-700 hover:text-white transition-colors ease-in-out duration-75">Adoptions</NavLink>
            <NavLink href="/About" class="rounded-full px-3 font-display py-2 text-sm font-medium text-black hover:bg-indigo-700 hover:text-white transition-colors ease-in-out duration-75">About</NavLink>
            <NavLink href="/Contact" class="rounded-full px-3 font-display py-2 text-sm font-medium text-black hover:bg-indigo-700 hover:text-white transition-colors ease-in-out duration-75">Contact</NavLink>
          </div> 
        </div>
        <AuthorizeView>
          <Authorized>
            <div class="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
              <button type="button" class="relative rounded-full bg-white p-1 text-blackhover:text-white focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800 focus:outline-hidden">
                <span class="absolute -inset-1.5"></span>
                <span class="sr-only">View notifications</span>
                <span class="inline-flex shrink-0 rounded-full border border-indigo-300 bg-indigo-100 p-2 dark:border-indigo-300/10 dark:bg-indigo-400/10">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="size-6 stroke-indigo-700 dark:stroke-indigo-500">
                    <path stroke-linecap="round"
                          stroke-linejoin="round"
                          d="M14.857 17.082a23.848 23.848 0 0 0 5.454-1.31A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6 9v.75a8.967 8.967 0 0 1-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 0 1-5.714 0m5.714 0a3 3 0 1 1-5.714 0">
                    </path>
                  </svg>
                </span>
              </button>
              <!-- Profile dropdown -->
              <div class="relative ml-3">
                <div>
                  <button @onclick="ToggleMenu" type="button" class="relative flex rounded-full bg-gray-800 text-sm focus:outline-hidden focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-offset-2 focus-visible:ring-offset-gray-800" id="user-menu-button" aria-expanded="@(_showMenu ? "true" : "false")" aria-haspopup="true">
                    <span class="absolute -inset-1.5"></span>
                    <span class="sr-only">Open user menu</span>
                    <img class="size-8 rounded-full"
                         src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="profile-image"/>
                  </button>
                </div>
                <div @ref="_dropdownRef"
                     class="@(_showMenu ? _animationFadeIn : _animationFadeOut) absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-gray-200 py-1 shadow-lg ring-1 ring-black/5 focus:outline-hidden transition ease-out duration-100"
                     role="menu"
                     aria-orientation="vertical"
                     aria-labelledby="user-menu-button"
                     tabindex="-1">
                  <a href="#" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0">Your Profile</a>
                  <a href="#" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-1">Settings</a>
                  <button @onclick="SignOut" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-2">Sign out</button>
                </div>
              </div>
            </div>
          </Authorized>
          <NotAuthorized>
            <NavLink href="/SignIn" class="rounded-full px-3 font-display py-2 text-sm font-medium text-black hover:bg-indigo-700 hover:text-white transition-colors ease-in-out duration-75">Sign In</NavLink>
          </NotAuthorized>
        </AuthorizeView>
      </div>
    </div>
  </div>

  <!-- Mobile menu, show/hide based on menu state. -->
  <div class="sm:hidden" id="mobile-menu">
    <div class="space-y-1 px-2 pt-2 pb-3">
      <!-- Current: "bg-gray-900 text-white", Default: "text-black hover:bg-indigo-500 hover:text-white" -->
      <a href="#" class="block rounded-md bg-gray-900 px-3 py-2 text-base font-medium text-white" aria-current="page">Dashboard</a>
      <a href="#" class="block rounded-md px-3 py-2 text-base font-medium text-black hover:bg-indigo-500 hover:text-white">Team</a>
      <a href="#" class="block rounded-md px-3 py-2 text-base font-medium text-black hover:bg-indigo-500 hover:text-white">Projects</a>
      <a href="#" class="block rounded-md px-3 py-2 text-base font-medium text-black hover:bg-indigo-500 hover:text-white">Calendar</a>
    </div>
  </div>
</nav>

@code {
    private const string _animationFadeIn = "opacity-100 scale-100 pointer-events-auto";
    private const string _animationFadeOut = "opacity-0 scale-95 pointer-events-none";
    private bool _showMenu = false;
    private ElementReference _dropdownRef;
    private DotNetObjectReference<Navbar>? _dotNetRef;

    private IJSObjectReference? _module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _module = await Js.InvokeAsync<IJSObjectReference>("import", "./Components/Layout/Navbar.razor.js");
            _dotNetRef = DotNetObjectReference.Create(this);
            await _module.InvokeVoidAsync("registerClickAway", _dropdownRef, _dotNetRef);
        }
    }

    private void ToggleMenu()
    {
        _showMenu = !_showMenu;
    }

    [JSInvokable]
    public void CloseMenu()
    {
        if (_showMenu)
        {
            _showMenu = false;
            StateHasChanged();
        }
    }

    public async Task SignOut()
    {
      await _authService.SignOut();
      _nav.NavigateTo("/");
    }
}
