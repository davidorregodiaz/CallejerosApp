// <auto-generated />
using System;
using Adoption.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Adoption.Infrastructure.Migrations
{
    [DbContext(typeof(AdoptionDbContext))]
    [Migration("20250823211808_MovingIdToStronglyTyped")]
    partial class MovingIdToStronglyTyped
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("adoption")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Adoption.Domain.AggregatesModel.AdoptionAggregate.AdoptionRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid")
                        .HasColumnName("AnimalId");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Comments");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RequestDate");

                    b.Property<Guid>("RequesterId")
                        .HasColumnType("uuid")
                        .HasColumnName("RequesterId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("AdoptionRequests", "adoption");
                });

            modelBuilder.Entity("Adoption.Domain.AggregatesModel.AnimalAggregate.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("Age");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ImagesPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("Animals", "adoption");
                });

            modelBuilder.Entity("Adoption.Domain.AggregatesModel.AnimalAggregate.Animal", b =>
                {
                    b.OwnsOne("Adoption.Domain.AggregatesModel.AnimalAggregate.AnimalType", "AnimalType", b1 =>
                        {
                            b1.Property<Guid>("AnimalId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("AnimalType");

                            b1.HasKey("AnimalId");

                            b1.ToTable("Animals", "adoption");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");
                        });

                    b.OwnsOne("Adoption.Domain.AggregatesModel.AnimalAggregate.Breed", "Breed", b1 =>
                        {
                            b1.Property<Guid>("AnimalId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("Breed");

                            b1.HasKey("AnimalId");

                            b1.ToTable("Animals", "adoption");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");
                        });

                    b.Navigation("AnimalType");

                    b.Navigation("Breed");
                });
#pragma warning restore 612, 618
        }
    }
}
